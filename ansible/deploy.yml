---
- name: Deploy on Azure VM
  hosts: ubuntu-host
  become: yes
  vars:


  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker dependencies
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Copy tomcat-users.xml
      copy:
        src: /home/alan/actions-runner/_work/devopspetclinic/devopspetclinic/devops/tomcat/tomcat-users.xml
        dest: /home/adminuser/tomcat-users.xml

    - name: Copy context.xml
      copy:
        src: /home/alan/actions-runner/_work/devopspetclinic/devopspetclinic/devops/tomcat/context.xml
        dest: /home/adminuser/context.xml

    - name: Copy warfile local to test-environment
      copy:
        src: /home/alan/actions-runner/_work/github-petclinic/github-petclinic/src/test/spring-framework-petclinic-{{ hostvars[inventory_hostname]['VERSION'] }}.war
        dest: /home/adminuser/petclinic-{{ hostvars[inventory_hostname]['VERSION'] }}.war

    - name: Create Dockerfile
      copy:
        dest: /home/adminuser/Dockerfile
        content: |
          FROM ubuntu:latest 
          RUN apt-get -y update && apt-get -y upgrade
          RUN apt-get -y install openjdk-8-jdk wget
          RUN mkdir /usr/local/tomcat
          RUN wget https://downloads.apache.org/tomcat/tomcat-9/v9.0.76/bin/apache-tomcat-9.0.76.tar.gz -O /tmp/tomcat.tar.gz
          RUN cd /tmp && tar xvfz tomcat.tar.gz
          RUN cp -Rv /tmp/apache-tomcat-9.0.76/* /usr/local/tomcat/
          ADD tomcat-users.xml /usr/local/tomcat/conf/
          ADD context.xml /usr/local/tomcat/webapps/manager/META-INF
          ADD petclinic-{{ hostvars[inventory_hostname]['VERSION'] }}.war /usr/local/tomcat/webapps/
          EXPOSE 8080
          CMD /usr/local/tomcat/bin/catalina.sh run

    - name: Build Docker image
      shell: docker build -t {{ docker_image_name }}:{{ hostvars[inventory_hostname]['VERSION'] }} /home/adminuser

    - name: Run Docker container
      shell: docker run -d -p 8080:8080 {{ docker_image_name }}:{{ hostvars[inventory_hostname]['VERSION'] }}
